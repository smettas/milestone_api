{"uid":"6eb9bf34503ba24d","name":"test_update_post_with_invalid_id","fullName":"tests.test_posts#test_update_post_with_invalid_id","historyId":"1c5e41e8af2790ca3aaa52307104bd68","time":{"start":1751376588689,"stop":1751376589342,"duration":653},"status":"failed","statusMessage":"AssertionError: Expected 400 or 404 for invalid ID\nassert 500 in [400, 404]\n +  where 500 = <Response [500]>.status_code","statusTrace":"api = <api.posts_api.PostsAPI object at 0x0000017AC82EEB90>\n\n    @pytest.mark.negative_test\n    #@pytest.mark.xfail(reason=\"Fake API accepts string ID\")\n    def test_update_post_with_invalid_id(api):\n        payload = negative_data[\"invalid_id_post\"]\n        res = api.update_post(\"abc\", payload)\n>       assert res.status_code in [400, 404], \"Expected 400 or 404 for invalid ID\"\nE       AssertionError: Expected 400 or 404 for invalid ID\nE       assert 500 in [400, 404]\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\test_posts.py:82: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"api","time":{"start":1751376585966,"stop":1751376585971,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected 400 or 404 for invalid ID\nassert 500 in [400, 404]\n +  where 500 = <Response [500]>.status_code","statusTrace":"api = <api.posts_api.PostsAPI object at 0x0000017AC82EEB90>\n\n    @pytest.mark.negative_test\n    #@pytest.mark.xfail(reason=\"Fake API accepts string ID\")\n    def test_update_post_with_invalid_id(api):\n        payload = negative_data[\"invalid_id_post\"]\n        res = api.update_post(\"abc\", payload)\n>       assert res.status_code in [400, 404], \"Expected 400 or 404 for invalid ID\"\nE       AssertionError: Expected 400 or 404 for invalid ID\nE       assert 500 in [400, 404]\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\test_posts.py:82: AssertionError","steps":[],"attachments":[{"uid":"3ca8e9783b930958","name":"log","source":"3ca8e9783b930958.txt","type":"text/plain","size":1101},{"uid":"5257ff59a248c465","name":"stderr","source":"5257ff59a248c465.txt","type":"text/plain","size":244}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"negative_test"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_posts"},{"name":"host","value":"DESKTOP-J0TB641"},{"name":"thread","value":"11676-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_posts"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["negative_test"]},"source":"6eb9bf34503ba24d.json","parameterValues":[]}