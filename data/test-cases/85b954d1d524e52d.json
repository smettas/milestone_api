{"uid":"85b954d1d524e52d","name":"test_create_post_with_empty_payload","fullName":"tests.test_posts#test_create_post_with_empty_payload","historyId":"348207e96f6017fbc3857480fe6d42f1","time":{"start":1751377540064,"stop":1751377540710,"duration":646},"status":"skipped","statusMessage":"XFAIL Fake API allows empty payload\n\nAssertionError: Expected 400 or 422 for empty payload\nassert 201 in [400, 422]\n +  where 201 = <Response [201]>.status_code","statusTrace":"api = <api.posts_api.PostsAPI object at 0x0000024FA47DEB90>\n\n    @pytest.mark.negative_test\n    @pytest.mark.xfail(reason=\"Fake API allows empty payload\")\n    def test_create_post_with_empty_payload(api):\n        payload = negative_data[\"empty_payload\"]\n        res = api.create_post(payload)\n>       assert res.status_code in [400, 422], \"Expected 400 or 422 for empty payload\"\nE       AssertionError: Expected 400 or 422 for empty payload\nE       assert 201 in [400, 422]\nE        +  where 201 = <Response [201]>.status_code\n\ntests\\test_posts.py:89: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"api","time":{"start":1751377537112,"stop":1751377537115,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL Fake API allows empty payload\n\nAssertionError: Expected 400 or 422 for empty payload\nassert 201 in [400, 422]\n +  where 201 = <Response [201]>.status_code","statusTrace":"api = <api.posts_api.PostsAPI object at 0x0000024FA47DEB90>\n\n    @pytest.mark.negative_test\n    @pytest.mark.xfail(reason=\"Fake API allows empty payload\")\n    def test_create_post_with_empty_payload(api):\n        payload = negative_data[\"empty_payload\"]\n        res = api.create_post(payload)\n>       assert res.status_code in [400, 422], \"Expected 400 or 422 for empty payload\"\nE       AssertionError: Expected 400 or 422 for empty payload\nE       assert 201 in [400, 422]\nE        +  where 201 = <Response [201]>.status_code\n\ntests\\test_posts.py:89: AssertionError","steps":[],"attachments":[{"uid":"f1ad4a48d68ed03f","name":"log","source":"f1ad4a48d68ed03f.txt","type":"text/plain","size":236},{"uid":"12f4493a50910ba0","name":"stderr","source":"12f4493a50910ba0.txt","type":"text/plain","size":172}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"@pytest.mark.xfail(reason='Fake API allows empty payload')"},{"name":"tag","value":"negative_test"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_posts"},{"name":"host","value":"DESKTOP-J0TB641"},{"name":"thread","value":"6440-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_posts"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.xfail(reason='Fake API allows empty payload')","negative_test"]},"source":"85b954d1d524e52d.json","parameterValues":[]}