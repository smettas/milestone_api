{"uid":"bbdcc2f6b59d82df","name":"test_create_post_with_empty_payload","fullName":"tests.test_posts#test_create_post_with_empty_payload","historyId":"348207e96f6017fbc3857480fe6d42f1","time":{"start":1751376589357,"stop":1751376590005,"duration":648},"status":"failed","statusMessage":"AssertionError: Expected 400 or 422 for empty payload\nassert 201 in [400, 422]\n +  where 201 = <Response [201]>.status_code","statusTrace":"api = <api.posts_api.PostsAPI object at 0x0000017AC82EEB90>\n\n    @pytest.mark.negative_test\n    #@pytest.mark.xfail(reason=\"Fake API allows empty payload\")\n    def test_create_post_with_empty_payload(api):\n        payload = negative_data[\"empty_payload\"]\n        res = api.create_post(payload)\n>       assert res.status_code in [400, 422], \"Expected 400 or 422 for empty payload\"\nE       AssertionError: Expected 400 or 422 for empty payload\nE       assert 201 in [400, 422]\nE        +  where 201 = <Response [201]>.status_code\n\ntests\\test_posts.py:89: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"api","time":{"start":1751376585966,"stop":1751376585971,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Expected 400 or 422 for empty payload\nassert 201 in [400, 422]\n +  where 201 = <Response [201]>.status_code","statusTrace":"api = <api.posts_api.PostsAPI object at 0x0000017AC82EEB90>\n\n    @pytest.mark.negative_test\n    #@pytest.mark.xfail(reason=\"Fake API allows empty payload\")\n    def test_create_post_with_empty_payload(api):\n        payload = negative_data[\"empty_payload\"]\n        res = api.create_post(payload)\n>       assert res.status_code in [400, 422], \"Expected 400 or 422 for empty payload\"\nE       AssertionError: Expected 400 or 422 for empty payload\nE       assert 201 in [400, 422]\nE        +  where 201 = <Response [201]>.status_code\n\ntests\\test_posts.py:89: AssertionError","steps":[],"attachments":[{"uid":"6bcda5a15d4ed988","name":"log","source":"6bcda5a15d4ed988.txt","type":"text/plain","size":236},{"uid":"a076b6f7f4209dec","name":"stderr","source":"a076b6f7f4209dec.txt","type":"text/plain","size":172}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"tag","value":"negative_test"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_posts"},{"name":"host","value":"DESKTOP-J0TB641"},{"name":"thread","value":"11676-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_posts"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["negative_test"]},"source":"bbdcc2f6b59d82df.json","parameterValues":[]}