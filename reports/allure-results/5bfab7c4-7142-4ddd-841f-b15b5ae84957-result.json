{"name": "test_update_post_with_invalid_id", "status": "failed", "statusDetails": {"message": "AssertionError: Expected 400 or 404 for invalid ID\nassert 500 in [400, 404]\n +  where 500 = <Response [500]>.status_code", "trace": "api = <api.posts_api.PostsAPI object at 0x0000017AC82EEB90>\n\n    @pytest.mark.negative_test\n    #@pytest.mark.xfail(reason=\"Fake API accepts string ID\")\n    def test_update_post_with_invalid_id(api):\n        payload = negative_data[\"invalid_id_post\"]\n        res = api.update_post(\"abc\", payload)\n>       assert res.status_code in [400, 404], \"Expected 400 or 404 for invalid ID\"\nE       AssertionError: Expected 400 or 404 for invalid ID\nE       assert 500 in [400, 404]\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\test_posts.py:82: AssertionError"}, "attachments": [{"name": "log", "source": "b936bbf9-0921-4352-845f-b7a6ee847ec8-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "25f62242-f98f-4631-8d46-4588169070b9-attachment.txt", "type": "text/plain"}], "start": 1751376588689, "stop": 1751376589342, "uuid": "3d296b1a-7acf-4636-b339-40af01ed5a55", "historyId": "1c5e41e8af2790ca3aaa52307104bd68", "testCaseId": "1c5e41e8af2790ca3aaa52307104bd68", "fullName": "tests.test_posts#test_update_post_with_invalid_id", "labels": [{"name": "tag", "value": "negative_test"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_posts"}, {"name": "host", "value": "DESKTOP-J0TB641"}, {"name": "thread", "value": "11676-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_posts"}]}