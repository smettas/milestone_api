{"name": "test_update_post_with_invalid_id", "status": "skipped", "statusDetails": {"message": "XFAIL Fake API accepts string ID\n\nAssertionError: Expected 400 or 404 for invalid ID\nassert 500 in [400, 404]\n +  where 500 = <Response [500]>.status_code", "trace": "api = <api.posts_api.PostsAPI object at 0x000002799E0967A0>\n\n    @pytest.mark.negative_test\n    @pytest.mark.xfail(reason=\"Fake API accepts string ID\")\n    def test_update_post_with_invalid_id(api):\n        payload = negative_data[\"invalid_id_post\"]\n        res = api.update_post(\"abc\", payload)\n>       assert res.status_code in [400, 404], \"Expected 400 or 404 for invalid ID\"\nE       AssertionError: Expected 400 or 404 for invalid ID\nE       assert 500 in [400, 404]\nE        +  where 500 = <Response [500]>.status_code\n\ntests\\test_posts.py:83: AssertionError"}, "attachments": [{"name": "log", "source": "8cecb016-03d6-4e64-b79a-ae3648c2952c-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "4bf1294a-6037-4753-8e13-7d81283c7a84-attachment.txt", "type": "text/plain"}], "start": 1751386391867, "stop": 1751386392524, "uuid": "346db0f2-548b-4fb2-94d2-130c8b0ccdf2", "historyId": "1c5e41e8af2790ca3aaa52307104bd68", "testCaseId": "1c5e41e8af2790ca3aaa52307104bd68", "fullName": "tests.test_posts#test_update_post_with_invalid_id", "labels": [{"name": "tag", "value": "@pytest.mark.xfail(reason='Fake API accepts string ID')"}, {"name": "tag", "value": "negative_test"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_posts"}, {"name": "host", "value": "DESKTOP-J0TB641"}, {"name": "thread", "value": "3588-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_posts"}]}